agent2.sources = source1
agent2.sinks = sink1
agent2.channels = channel1


agent2.sources.source1.type = cn.rtmap.flume.source.SQLSource
agent2.sources.source1.connection.url = jdbc:mysql://namenode:3306/abc

agent2.sources.source1.user = root
agent2.sources.source1.password = root
agent2.sources.source1.table = test

agent2.sources.source1.check.column.name = id
agent2.sources.source1.check.column.type = bigint

agent2.sources.source1.columns.to.select = *
agent2.sources.source1.run.query.delay=10000
agent2.sources.source1.status.file.path = /var/lib/flume
agent2.sources.source1.status.file.name = sql-source.status
agent2.sources.source1.batch.size = 1000
agent2.sources.source1.max.rows = 2000
agent2.sources.source1.last.value.query = select max(id) as id from test

agent2.sources.source1.channels = channel1
agent2.sinks.sink1.channel = channel1

agent2.channels.channel1.type = memory
agent2.sinks.sink1.type = logger

# ref: https://github.com/keedio/flume-ng-sql-source

# agent.sources = sql-source
# agent.sources.sql-source.type = cn.rtmap.flume.source.SQLSource  
# 
# # URL to connect to database
# agent.sources.sql-source.connection.url = jdbc:mysql://localhost:3306/abc
# 
# # Database connection properties
# agent.sources.sql-source.user = root
# agent.sources.sql-source.password = root
# agent.sources.sql-source.table = test
# 
# # Columns to import to kafka (default * import entire row)
# agent.sources.sql-source.columns.to.select = *
# 
# 
# # Query delay, each configured milisecond the query will be sent
# agent.sources.sql-source.run.query.delay=10000000
# 
# # Status file is used to save last readed row
# agent.sources.sql-source.status.file.path = /var/lib/flume
# agent.sources.sql-source.status.file.name = sql-source.status
# 
# # Custom query
# # agent.sources.sql-source.custom.query = SELECT * FROM table WHERE something;
# agent.sources.sql-source.batch.size = 1000;
# agent.sources.sql-source.max.rows = 10000;
# 
# # Connected channel names
# agent.sources.sql-source.channels = memoryChannel

