# define components
agent1.sources = source1
agent1.sinks = sink1 sink2
agent1.channels = channel1 channel2

# http source
agent1.sources.source1.type = http
agent1.sources.source1.port = 41414

# set channels for source
agent1.sources.source1.channels = channel1 channel2

# set channel for sinks
agent1.sinks.sink1.channel = channel1
agent1.sinks.sink2.channel = channel2

# multiplexing
agent1.sources.source1.selector.type = multiplexing
agent1.sources.source1.selector.header = type
agent1.sources.source1.selector.mapping.pos = channel1
agent1.sources.source1.selector.mapping.log = channel2
agent1.sources.source1.selector.default = channel1

# sink1 for position rawdata
agent1.sinks.sink1.type = hdfs
agent1.sinks.sink1.hdfs.path = /bcia/stagedb/rawdata/%{bid}/%{ts}
agent1.sinks.sink1.hdfs.filePrefix = rawdata
agent1.sinks.sink1.hdfs.fileSuffix = .txt
agent1.sinks.sink1.hdfs.inUsePrefix = _
agent1.sinks.sink1.hdfs.fileType = DataStream

# sink2 for bcia rawlog
agent1.sinks.sink2.type = hdfs
agent1.sinks.sink2.hdfs.path = /bcia/stagedb/%{tab}/%{ts}
agent1.sinks.sink2.hdfs.filePrefix = rawlog
agent1.sinks.sink2.hdfs.fileSuffix = .txt
agent1.sinks.sink2.hdfs.inUsePrefix = _
agent1.sinks.sink2.hdfs.fileType = DataStream

# persistence type
agent1.channels.channel1.type = memory
agent1.channels.channel2.type = file
